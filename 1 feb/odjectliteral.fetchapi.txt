Object Literal Enhancements: 


<html>
    <head>

    </head>

     <body>

         <form>
               <input type="text" placeholder="enter product name" id="name"> <br><br>
               <input type="text" placeholder="enter product price" id="price"> <br><br>
               <input type="text" placeholder="description" id="desc"> <br><br>
               <input type="text" placeholder="brand" id="brand"> <br><br>
               <button onclick="addProduct()">Add Product</button>

         </form>

          <script>

                          function addProduct(){
                              event.preventDefault();
                            var name= document.getElementById("name").value;
                            var price= document.getElementById("price").value;
                            var desc= document.getElementById("desc").value;
                            var brand= document.getElementById("brand").value;
                               // ES5
                            // var product = {
                            //      name:name, 
                            //      price:price, 
                            //      desc:desc,
                            //      brand:brand
                            // }
                              // ES6
                            var product = {name,price,desc,brand};
                            console.log(product)
                          }

          </script>

     </body>
</html>



(another usecase):

<html>
    <head>

    </head>

     <body>

       

          <script>

                     var brand = {
                                 brand_name: "XYZ", 
                                 location: "Mumbai"
                     }

                     var reviews = "4.5";
                     var getProductDetails = function(){
                           return this.name + "\t"+ this.price;  ///this is refer to current obj
                     }
                     // ES5
                //   var product = {
                //            name: "product 1", 
                //            price: 9000,
                //            brand:{
                //            brand_name: brand.brand_name, 
                //            location: brand.location
                //            }
                //   }

                    // ES6
                    var product = {
                           name: "product 1", 
                           price: 9000,
                           brand,
                           reviews,
                           getProductDetails  
                  }

                  var x= { getProductDetails,name,brand_name:brand.brand_name};

                  console.log(product.getProductDetails());
                  console.log(x);   

          </script>

     </body>
</html> 



Computed Property: an obj is a key-value pair key key [] square barckets pedhathey aadhi computed property aavuthudhi..

 var x = "name";

                    var obj = {
                         [x]: "product 1"
                    }
                    console.log(obj); 



Fetch API: 

fetch("https://fakestoreapi.com/products").then(
                         response => response.json()             //we use .then in 2 times method chainging
                    ).then(
                         response => {
                               console.log(response);
                         }
                    ) 


using async and await: 

                async function getData(){
                  var response =  await fetch("https://fakestoreapi.com/products");
                      var data=  await response.json();
                      console.log("data", data);
                 }

                 getData();


Problem Statement: 

Implement CRUD operations using fetch. 

